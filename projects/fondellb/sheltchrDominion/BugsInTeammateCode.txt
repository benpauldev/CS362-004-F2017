
Name: Bugs in teammate's code.
Author: Benjamin Fondell
Description: These are the bugs revealed by my test suite for Dominion.

TEST SUITE CONTENTS

Unit Tests Functions: supplyCount , whoseTurn , buyCard , isGameOver

Unit Tests Cards: village , great hall , smithy , adventurer

Random Tests: smithy , adventurer , whoseTurn

Note: For the described test suite, bugs were only revealed in playVillage() and playSmithy().

1. Drawing too few cards: On line 688 of dominion.c, playSmithy() draws too few cards from the deck. 
The drawCard() function is wrapped within a for-loop which, according to the rules of dominion for the smithy card, should be called three times. The error is in the iteration bound of the loop. Instead of the for loop ending when the index is greater than 3, the loop terminates when the index is greater than 2. Thus the loop only iterates and calls the drawCard function twice. The bug does not break the running of the program but does significantly alter the intended gameplay of Dominion. By limiting the cards drawn by playing the smithy card this bug greatly limits the effectiveness and value of the card int the player's hand. The bug subscequently results in too many cards existing in the deck after smithy is played as fewer cards are drawn than intended. This limits the ability of the deck to cycle and shuffle, slowing the pace of the game. The bug can easily be fixed by changing the for-loop on line 688 to break when index is greater than 3 instead of 2. This will provide the desired function to the playSmithy function. 

2. Adding too few actions: On line 703 of dominion.c, playVillage() adds too few actions to the current players state object. On line 703, playVillage increments the current player's numActions by one. This is the variable resposnsible for holding the player's avialable actions within a turn of the game. The intent of playing village is to add one card to the player's hand from the deck and add two actions for that turn. The effect on the program itself is negligbale as the program will continue to run without crashing. The effect on the gameplay of Dominion is significant as the player does not recieve the intended benefits of playing the card. The limiting of the actions added by the card slows the pace of the game and limits the value of the card in the players hand. A simple solution for this bug is to increment the numActions variable by 2 instead of 1 on line 703. Fixing this line will produce the desired effect from playVillage(). 